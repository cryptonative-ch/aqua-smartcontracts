{
  "address": "0x906b798a73EFe9482b16b7544B1062d6765A49bf",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensForSale",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minCommitment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxCommitment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minRaise",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "participantList",
          "type": "bool"
        }
      ],
      "name": "TemplateInitialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aquaFactory",
      "outputs": [
        {
          "internalType": "contract IAquaFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createSale",
      "outputs": [
        {
          "internalType": "address",
          "name": "newSale",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encodedInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSaleCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metaDataContentHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleLauncher",
      "outputs": [
        {
          "internalType": "contract ISaleLauncher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "templateLauncher",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "templateManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "templateName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOut",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupplier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensForSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb3b5a1329fdb938214f44a636d33b4def1916f8fef4ee8107466bf15a719bdd8",
  "receipt": {
    "to": null,
    "from": "0xA601aeD34dda12fF760d8ABb64Fd4Eb3664E35Af",
    "contractAddress": "0x906b798a73EFe9482b16b7544B1062d6765A49bf",
    "transactionIndex": 48,
    "gasUsed": "942911",
    "logsBloom": "0x
    "blockHash": "0x55dbe518482b195c0294c021133a2998cb6bffeacb28ae506b837a5ea2f17687",
    "transactionHash": "0xb3b5a1329fdb938214f44a636d33b4def1916f8fef4ee8107466bf15a719bdd8",
    "logs": [],
    "blockNumber": 9177777,
    "cumulativeGasUsed": "29488423",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "3c6b894fd2b2fef5ee383711645647e6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensForSale\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRaise\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"participantList\",\"type\":\"bool\"}],\"name\":\"TemplateInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aquaFactory\",\"outputs\":[{\"internalType\":\"contract IAquaFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newSale\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodedInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSaleCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metaDataContentHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleLauncher\",\"outputs\":[{\"internalType\":\"contract ISaleLauncher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"templateLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"templateManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"templateName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOut\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(bytes)\":{\"details\":\"setup function expected to be called by templateLauncher to init the template\",\"params\":{\"_data\":\"encoded template params\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/templates/FixedPriceSaleTemplate.sol\":\"FixedPriceSaleTemplate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () internal {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     *\\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\"},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/shared/interfaces/IAquaFactory.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface IAquaFactory {\\n    function allSales() external view returns (address[] calldata);\\n\\n    function numberOfSales() external view returns (uint256);\\n\\n    function templateManager() external view returns (address);\\n\\n    function templateLauncher() external view returns (address);\\n\\n    function templateFee() external view returns (uint256);\\n\\n    function saleFee() external view returns (uint256);\\n\\n    function feeDenominator() external view returns (uint256);\\n\\n    function feeNumerator() external view returns (uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function addTemplate(address _template) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf588d2009192b85de15083f06b466ae714b50349a7f6ed6e8f15d7b03cfc6f13\",\"license\":\"LGPL-3.0\"},\"contracts/shared/interfaces/IParticipantList.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface IParticipantList {\\n    function isInList(address account) external view returns (bool);\\n\\n    function setParticipantAmounts(\\n        address[] memory accounts,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    function initialized() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x39973dd7b329432d31008399607f45d39da211d67bd7c5ec86525cc95e6a7ed4\",\"license\":\"LGPL-3.0\"},\"contracts/shared/interfaces/IParticipantListLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface IParticipantListLauncher {\\n    function launchParticipantList(address[] memory managers)\\n        external\\n        returns (address newList);\\n}\\n\",\"keccak256\":\"0x71c76c51f254c14935bf7f5dc9b632557e02eef3a496656d6ec60cf9f305d65b\",\"license\":\"LGPL-3.0\"},\"contracts/shared/interfaces/ISaleLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface ISaleLauncher {\\n    function factory() external view returns (address);\\n\\n    function createSale(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address _tokenSupplier,\\n        bytes calldata _data\\n    ) external payable returns (address);\\n\\n    function getDepositAmountWithFees(uint256 _tokenSupply)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x74e138c0890eeaf3dcabda972eeb1b4cb8464d0baf506b26b9837e8fb1139536\",\"license\":\"LGPL-3.0\"},\"contracts/shared/interfaces/ITemplateLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface ITemplateLauncher {\\n    function launchTemplate(\\n        uint256 _templateId,\\n        bytes calldata _data,\\n        string calldata _metaDataContentHash,\\n        address _templateDeployer\\n    ) external payable returns (address newSale);\\n\\n    function participantListLaucher() external view returns (address);\\n}\\n\",\"keccak256\":\"0x629c7f5164ef67fe098cb88c974f50ea4dfa00c7175a1358f052851ba94ffd9e\",\"license\":\"LGPL-3.0\"},\"contracts/shared/utils/AquaTemplate.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\nimport \\\"@openzeppelin/contracts/introspection/ERC165.sol\\\";\\nimport \\\"./AquaTemplateId.sol\\\";\\n\\nabstract contract AquaTemplate is ERC165, AquaTemplateId {\\n    string public templateName;\\n    string public metaDataContentHash;\\n\\n    function init(bytes calldata data) external virtual;\\n\\n    constructor() public {\\n        _registerInterface(_INTERFACE_ID_TEMPLATE);\\n    }\\n}\\n\",\"keccak256\":\"0x5757a6bd8b5beb2e89cd7d0a98cd2a22c7c11448b78fe5991fc75a0ffb33191e\",\"license\":\"LGPL-3.0\"},\"contracts/shared/utils/AquaTemplateId.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ncontract AquaTemplateId {\\n    // ITemplate.init.selector ^ ITemplate.templateName.selector\\n    bytes4 internal constant _INTERFACE_ID_TEMPLATE = 0x242c4805;\\n}\\n\",\"keccak256\":\"0xc7beb9be3c7bc59175022710e0677ab4782539c84b415dbd215b33bb7a01501d\",\"license\":\"LGPL-3.0\"},\"contracts/templates/FixedPriceSaleTemplate.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../shared/interfaces/ISaleLauncher.sol\\\";\\nimport \\\"../shared/interfaces/IAquaFactory.sol\\\";\\nimport \\\"../shared/interfaces/ITemplateLauncher.sol\\\";\\nimport \\\"../shared/utils/AquaTemplate.sol\\\";\\nimport \\\"../shared/interfaces/IParticipantListLauncher.sol\\\";\\nimport \\\"../shared/interfaces/IParticipantList.sol\\\";\\n\\ncontract FixedPriceSaleTemplate is AquaTemplate {\\n    ISaleLauncher public saleLauncher;\\n    IAquaFactory public aquaFactory;\\n    address public templateManager;\\n    uint256 public saleTemplateId;\\n    address public tokenSupplier;\\n    address public tokenOut;\\n    uint256 public tokensForSale;\\n    bytes public encodedInitData;\\n    bool public isInitialized;\\n    bool public isSaleCreated;\\n    address public templateLauncher;\\n\\n    event TemplateInitialized(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 tokenPrice,\\n        uint256 tokensForSale,\\n        uint256 startDate,\\n        uint256 endDate,\\n        uint256 minCommitment,\\n        uint256 maxCommitment,\\n        uint256 minRaise,\\n        bool participantList\\n    );\\n    event SaleCreated();\\n\\n    constructor() public {\\n        templateName = \\\"FixedPriceSaleTemplate\\\";\\n        metaDataContentHash = \\\"0x\\\"; // ToDo\\n    }\\n\\n    /// @dev internal setup function to initialize the template, called by init()\\n    /// @param _saleLauncher address of Aqua SaleLauncher\\n    /// @param _saleTemplateId Aqua Sale TemplateId\\n    /// @param _tokenSupplier address that deposits the selling tokens\\n    /// @param _tokenIn token to buy tokens with\\n    /// @param _tokenOut token to be sold\\n    /// @param _tokenPrice price of one tokenOut\\n    /// @param _tokensForSale amount of tokens to be sold\\n    /// @param _startDate unix timestamp when the sale starts\\n    /// @param _endDate unix timestamp when the sale ends\\n    /// @param _minCommitment minimum tokenIn to buy\\n    /// @param _maxCommitment maximum tokenIn to buy\\n    /// @param _minRaise sale goal,if not reached investors can claim back their committed tokens\\n    /// @param _participantList defines if a participantList should be launched\\n    function initTemplate(\\n        address _saleLauncher,\\n        uint256 _saleTemplateId,\\n        address _tokenSupplier,\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _tokenPrice,\\n        uint256 _tokensForSale,\\n        uint256 _startDate,\\n        uint256 _endDate,\\n        uint256 _minCommitment,\\n        uint256 _maxCommitment,\\n        uint256 _minRaise,\\n        bool _participantList\\n    ) internal {\\n        require(!isInitialized, \\\"FixedPriceSaleTemplate: ALEADY_INITIALIZED\\\");\\n\\n        saleLauncher = ISaleLauncher(_saleLauncher);\\n        aquaFactory = IAquaFactory(ISaleLauncher(_saleLauncher).factory());\\n        templateManager = aquaFactory.templateManager();\\n        templateLauncher = aquaFactory.templateLauncher();\\n        saleTemplateId = _saleTemplateId;\\n        tokensForSale = _tokensForSale;\\n        tokenOut = _tokenOut;\\n        tokenSupplier = _tokenSupplier;\\n        isInitialized = true;\\n        address participantList;\\n\\n        if (_participantList) {\\n            address participantListLauncher = ITemplateLauncher(\\n                templateLauncher\\n            ).participantListLaucher();\\n\\n            address[] memory listManagers = new address[](1);\\n            listManagers[0] = address(_tokenSupplier);\\n            participantList = IParticipantListLauncher(participantListLauncher)\\n                .launchParticipantList(listManagers);\\n        }\\n\\n        encodedInitData = abi.encode(\\n            IERC20(_tokenIn),\\n            IERC20(_tokenOut),\\n            _tokenPrice,\\n            _tokensForSale,\\n            _startDate,\\n            _endDate,\\n            _minCommitment,\\n            _maxCommitment,\\n            _minRaise,\\n            tokenSupplier,\\n            participantList\\n        );\\n\\n        emit TemplateInitialized(\\n            _tokenIn,\\n            _tokenOut,\\n            _tokenPrice,\\n            _tokensForSale,\\n            _startDate,\\n            _endDate,\\n            _minCommitment,\\n            _maxCommitment,\\n            _minRaise,\\n            _participantList\\n        );\\n    }\\n\\n    function createSale() public payable returns (address newSale) {\\n        require(!isSaleCreated, \\\"FixedPriceSaleTemplate: Sale already created\\\");\\n        require(\\n            msg.sender == tokenSupplier,\\n            \\\"FixedPriceSaleTemplate: FORBIDDEN\\\"\\n        );\\n\\n        newSale = saleLauncher.createSale{value: msg.value}(\\n            saleTemplateId,\\n            tokenOut,\\n            tokensForSale,\\n            tokenSupplier,\\n            encodedInitData\\n        );\\n        isSaleCreated = true;\\n        emit SaleCreated();\\n    }\\n\\n    /// @dev setup function expected to be called by templateLauncher to init the template\\n    /// @param _data encoded template params\\n    function init(bytes calldata _data) public override {\\n        (\\n            address _saleLauncher,\\n            uint256 _saleTemplateId,\\n            address _tokenSupplier,\\n            address _tokenIn,\\n            address _tokenOut,\\n            uint256 _tokenPrice,\\n            uint256 _tokensForSale,\\n            uint256 _startDate,\\n            uint256 _endDate,\\n            uint256 _minCommitment,\\n            uint256 _maxCommitment,\\n            uint256 _minRaise,\\n            bool _participantList\\n        ) = abi.decode(\\n                _data,\\n                (\\n                    address,\\n                    uint256,\\n                    address,\\n                    address,\\n                    address,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    bool\\n                )\\n            );\\n\\n        initTemplate(\\n            _saleLauncher,\\n            _saleTemplateId,\\n            _tokenSupplier,\\n            _tokenIn,\\n            _tokenOut,\\n            _tokenPrice,\\n            _tokensForSale,\\n            _startDate,\\n            _endDate,\\n            _minCommitment,\\n            _maxCommitment,\\n            _minRaise,\\n            _participantList\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x8a597a53543b1bc55b9ac02e045f0c5d0cdf11d84cc78944038baccda2dec9f0\",\"license\":\"LGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000246301ffc9a760e01b620000ad565b6200003663242c480560e01b620000ad565b6040805180820190915260168082527f4669786564507269636553616c6554656d706c6174650000000000000000000060209092019182526200007c9160019162000132565b5060408051808201909152600280825261060f60f31b6020909201918252620000a6918162000132565b50620001ce565b6001600160e01b031980821614156200010d576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017557805160ff1916838001178555620001a5565b82800160010185558215620001a5579182015b82811115620001a557825182559160200191906001019062000188565b50620001b3929150620001b7565b5090565b5b80821115620001b35760008155600101620001b8565b610e5c80620001de6000396000f3fe6080604052600436106100f35760003560e01c8063613bb30b1161008a578063906652be11610059578063906652be14610334578063d0202d3b1461033c578063d4c33f2a14610351578063f569720d14610366576100f3565b8063613bb30b146102e057806366b210c2146102f557806369708c691461030a57806369f30fd11461031f576100f3565b8063392e53cd116100c6578063392e53cd146102225780634d68287e146102375780634ddf47d41461024c5780635aeb431e146102cb576100f3565b806301ffc9a7146100f8578063047f6fe61461014057806312aef8c3146101715780632a98bdbd14610198575b600080fd5b34801561010457600080fd5b5061012c6004803603602081101561011b57600080fd5b50356001600160e01b03191661037b565b604080519115158252519081900360200190f35b34801561014c57600080fd5b5061015561039a565b604080516001600160a01b039092168252519081900360200190f35b34801561017d57600080fd5b506101866103a9565b60408051918252519081900360200190f35b3480156101a457600080fd5b506101ad6103af565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e75781810151838201526020016101cf565b50505050905090810190601f1680156102145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022e57600080fd5b5061012c61043d565b34801561024357600080fd5b50610155610446565b34801561025857600080fd5b506102c96004803603602081101561026f57600080fd5b81019060208101813564010000000081111561028a57600080fd5b82018360208201111561029c57600080fd5b803590602001918460018302840111640100000000831117156102be57600080fd5b50909250905061045b565b005b3480156102d757600080fd5b5061012c610514565b3480156102ec57600080fd5b50610186610522565b34801561030157600080fd5b506101ad610528565b34801561031657600080fd5b50610155610580565b34801561032b57600080fd5b506101ad61058f565b6101556105e9565b34801561034857600080fd5b506101556107e1565b34801561035d57600080fd5b506101556107f0565b34801561037257600080fd5b506101556107ff565b6001600160e01b03191660009081526020819052604090205460ff1690565b6004546001600160a01b031681565b60095481565b600a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b505050505081565b600b5460ff1681565b600b546201000090046001600160a01b031681565b60008060008060008060008060008060008060008e8e6101a081101561048057600080fd5b506001600160a01b03813581169e5060208201359d50604082013581169c50606082013581169b50608082013516995060a0810135985060c0810135975060e0810135965061010081013595506101208101359450610140810135935061016081013592506101800135151590506105038d8d8d8d8d8d8d8d8d8d8d8d8d61080e565b505050505050505050505050505050565b600b54610100900460ff1681565b60065481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b6003546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b600b54600090610100900460ff16156106335760405162461bcd60e51b815260040180806020018281038252602c815260200180610dda602c913960400191505060405180910390fd5b6007546001600160a01b0316331461067c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e066021913960400191505060405180910390fd5b60035460065460085460095460075460405163da550d8960e01b8152600481018581526001600160a01b0394851660248301819052604483018590529285166064830181905260a060848401908152600a80546002600019600183161561010002019091160460a48601819052979099169863da550d899834989097959394919391929160c40190849080156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505096505050505050506020604051808303818588803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b50505050506040513d60208110156107a157600080fd5b5051600b805461ff0019166101001790556040519091507f75ec5602f8c53dccb97de898739afc3eb77713476dd27aa7ea4a4993e322bd8290600090a190565b6008546001600160a01b031681565b6005546001600160a01b031681565b6007546001600160a01b031681565b600b5460ff16156108505760405162461bcd60e51b815260040180806020018281038252602a815260200180610db0602a913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b038f169081179091556040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b1580156108a457600080fd5b505afa1580156108b8573d6000803e3d6000fd5b505050506040513d60208110156108ce57600080fd5b5051600480546001600160a01b0319166001600160a01b039283161780825560408051636a619f9560e11b81529051919093169263d4c33f2a9281810192602092909190829003018186803b15801561092657600080fd5b505afa15801561093a573d6000803e3d6000fd5b505050506040513d602081101561095057600080fd5b5051600580546001600160a01b0319166001600160a01b0392831617905560048054604080516326b4143f60e11b815290519190931692634d68287e9281810192602092909190829003018186803b1580156109ab57600080fd5b505afa1580156109bf573d6000803e3d6000fd5b505050506040513d60208110156109d557600080fd5b8101908080519060200190929190505050600b60026101000a8154816001600160a01b0302191690836001600160a01b031602179055508b6006819055508660098190555088600860006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600760006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001600b60006101000a81548160ff02191690831515021790555060008115610bff576000600b60029054906101000a90046001600160a01b03166001600160a01b03166332cf5cb66040518163ffffffff1660e01b815260040160206040518083038186803b158015610adb57600080fd5b505afa158015610aef573d6000803e3d6000fd5b505050506040513d6020811015610b0557600080fd5b505160408051600180825281830190925291925060609190602080830190803683370190505090508d81600081518110610b3b57fe5b6001600160a01b0392831660209182029290920181019190915260405163d341c81360e01b8152600481018281528451602483015284519386169363d341c8139386938392604490910191858101910280838360005b83811015610ba9578181015183820152602001610b91565b5050505090500192505050602060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050506040513d6020811015610bf857600080fd5b5051925050505b600754604080516001600160a01b03808f16602080840191909152818f1683850152606083018e9052608083018d905260a083018c905260c083018b905260e083018a905261010083018990526101208301889052938116610140830152841661016080830191909152825180830390910181526101809091019091528051610c8c92600a920190610d1c565b50604080516001600160a01b03808e1682528c1660208201528082018b9052606081018a90526080810189905260a0810188905260c0810187905260e08101869052610100810185905283151561012082015290517f1da4a232fc7842598a5c5385965b07a201fe830ff45c2d6c14614ed4e28f0e11918190036101400190a15050505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d5d57805160ff1916838001178555610d8a565b82800160010185558215610d8a579182015b82811115610d8a578251825591602001919060010190610d6f565b50610d96929150610d9a565b5090565b5b80821115610d965760008155600101610d9b56fe4669786564507269636553616c6554656d706c6174653a20414c454144595f494e495449414c495a45444669786564507269636553616c6554656d706c6174653a2053616c6520616c726561647920637265617465644669786564507269636553616c6554656d706c6174653a20464f5242494444454ea264697066735822122097b36c368cf19418cb7413fc65c9ad138e708f0af21089599ef7c67c4e4ddaf664736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063613bb30b1161008a578063906652be11610059578063906652be14610334578063d0202d3b1461033c578063d4c33f2a14610351578063f569720d14610366576100f3565b8063613bb30b146102e057806366b210c2146102f557806369708c691461030a57806369f30fd11461031f576100f3565b8063392e53cd116100c6578063392e53cd146102225780634d68287e146102375780634ddf47d41461024c5780635aeb431e146102cb576100f3565b806301ffc9a7146100f8578063047f6fe61461014057806312aef8c3146101715780632a98bdbd14610198575b600080fd5b34801561010457600080fd5b5061012c6004803603602081101561011b57600080fd5b50356001600160e01b03191661037b565b604080519115158252519081900360200190f35b34801561014c57600080fd5b5061015561039a565b604080516001600160a01b039092168252519081900360200190f35b34801561017d57600080fd5b506101866103a9565b60408051918252519081900360200190f35b3480156101a457600080fd5b506101ad6103af565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e75781810151838201526020016101cf565b50505050905090810190601f1680156102145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022e57600080fd5b5061012c61043d565b34801561024357600080fd5b50610155610446565b34801561025857600080fd5b506102c96004803603602081101561026f57600080fd5b81019060208101813564010000000081111561028a57600080fd5b82018360208201111561029c57600080fd5b803590602001918460018302840111640100000000831117156102be57600080fd5b50909250905061045b565b005b3480156102d757600080fd5b5061012c610514565b3480156102ec57600080fd5b50610186610522565b34801561030157600080fd5b506101ad610528565b34801561031657600080fd5b50610155610580565b34801561032b57600080fd5b506101ad61058f565b6101556105e9565b34801561034857600080fd5b506101556107e1565b34801561035d57600080fd5b506101556107f0565b34801561037257600080fd5b506101556107ff565b6001600160e01b03191660009081526020819052604090205460ff1690565b6004546001600160a01b031681565b60095481565b600a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b505050505081565b600b5460ff1681565b600b546201000090046001600160a01b031681565b60008060008060008060008060008060008060008e8e6101a081101561048057600080fd5b506001600160a01b03813581169e5060208201359d50604082013581169c50606082013581169b50608082013516995060a0810135985060c0810135975060e0810135965061010081013595506101208101359450610140810135935061016081013592506101800135151590506105038d8d8d8d8d8d8d8d8d8d8d8d8d61080e565b505050505050505050505050505050565b600b54610100900460ff1681565b60065481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b6003546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104355780601f1061040a57610100808354040283529160200191610435565b600b54600090610100900460ff16156106335760405162461bcd60e51b815260040180806020018281038252602c815260200180610dda602c913960400191505060405180910390fd5b6007546001600160a01b0316331461067c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e066021913960400191505060405180910390fd5b60035460065460085460095460075460405163da550d8960e01b8152600481018581526001600160a01b0394851660248301819052604483018590529285166064830181905260a060848401908152600a80546002600019600183161561010002019091160460a48601819052979099169863da550d899834989097959394919391929160c40190849080156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505096505050505050506020604051808303818588803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b50505050506040513d60208110156107a157600080fd5b5051600b805461ff0019166101001790556040519091507f75ec5602f8c53dccb97de898739afc3eb77713476dd27aa7ea4a4993e322bd8290600090a190565b6008546001600160a01b031681565b6005546001600160a01b031681565b6007546001600160a01b031681565b600b5460ff16156108505760405162461bcd60e51b815260040180806020018281038252602a815260200180610db0602a913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b038f169081179091556040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b1580156108a457600080fd5b505afa1580156108b8573d6000803e3d6000fd5b505050506040513d60208110156108ce57600080fd5b5051600480546001600160a01b0319166001600160a01b039283161780825560408051636a619f9560e11b81529051919093169263d4c33f2a9281810192602092909190829003018186803b15801561092657600080fd5b505afa15801561093a573d6000803e3d6000fd5b505050506040513d602081101561095057600080fd5b5051600580546001600160a01b0319166001600160a01b0392831617905560048054604080516326b4143f60e11b815290519190931692634d68287e9281810192602092909190829003018186803b1580156109ab57600080fd5b505afa1580156109bf573d6000803e3d6000fd5b505050506040513d60208110156109d557600080fd5b8101908080519060200190929190505050600b60026101000a8154816001600160a01b0302191690836001600160a01b031602179055508b6006819055508660098190555088600860006101000a8154816001600160a01b0302191690836001600160a01b031602179055508a600760006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001600b60006101000a81548160ff02191690831515021790555060008115610bff576000600b60029054906101000a90046001600160a01b03166001600160a01b03166332cf5cb66040518163ffffffff1660e01b815260040160206040518083038186803b158015610adb57600080fd5b505afa158015610aef573d6000803e3d6000fd5b505050506040513d6020811015610b0557600080fd5b505160408051600180825281830190925291925060609190602080830190803683370190505090508d81600081518110610b3b57fe5b6001600160a01b0392831660209182029290920181019190915260405163d341c81360e01b8152600481018281528451602483015284519386169363d341c8139386938392604490910191858101910280838360005b83811015610ba9578181015183820152602001610b91565b5050505090500192505050602060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050506040513d6020811015610bf857600080fd5b5051925050505b600754604080516001600160a01b03808f16602080840191909152818f1683850152606083018e9052608083018d905260a083018c905260c083018b905260e083018a905261010083018990526101208301889052938116610140830152841661016080830191909152825180830390910181526101809091019091528051610c8c92600a920190610d1c565b50604080516001600160a01b03808e1682528c1660208201528082018b9052606081018a90526080810189905260a0810188905260c0810187905260e08101869052610100810185905283151561012082015290517f1da4a232fc7842598a5c5385965b07a201fe830ff45c2d6c14614ed4e28f0e11918190036101400190a15050505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d5d57805160ff1916838001178555610d8a565b82800160010185558215610d8a579182015b82811115610d8a578251825591602001919060010190610d6f565b50610d96929150610d9a565b5090565b5b80821115610d965760008155600101610d9b56fe4669786564507269636553616c6554656d706c6174653a20414c454144595f494e495449414c495a45444669786564507269636553616c6554656d706c6174653a2053616c6520616c726561647920637265617465644669786564507269636553616c6554656d706c6174653a20464f5242494444454ea264697066735822122097b36c368cf19418cb7413fc65c9ad138e708f0af21089599ef7c67c4e4ddaf664736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "init(bytes)": {
        "details": "setup function expected to be called by templateLauncher to init the template",
        "params": {
          "_data": "encoded template params"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 6428,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "templateName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 6430,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "metaDataContentHash",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 6782,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "saleLauncher",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ISaleLauncher)5218"
      },
      {
        "astId": 6784,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "aquaFactory",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IAquaFactory)5145"
      },
      {
        "astId": 6786,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "templateManager",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 6788,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "saleTemplateId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 6790,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "tokenSupplier",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 6792,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "tokenOut",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 6794,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "tokensForSale",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 6796,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "encodedInitData",
        "offset": 0,
        "slot": "10",
        "type": "t_bytes_storage"
      },
      {
        "astId": 6798,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "isInitialized",
        "offset": 0,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 6800,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "isSaleCreated",
        "offset": 1,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 6802,
        "contract": "contracts/templates/FixedPriceSaleTemplate.sol:FixedPriceSaleTemplate",
        "label": "templateLauncher",
        "offset": 2,
        "slot": "11",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IAquaFactory)5145": {
        "encoding": "inplace",
        "label": "contract IAquaFactory",
        "numberOfBytes": "20"
      },
      "t_contract(ISaleLauncher)5218": {
        "encoding": "inplace",
        "label": "contract ISaleLauncher",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}