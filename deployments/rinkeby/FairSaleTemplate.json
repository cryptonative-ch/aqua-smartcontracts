{
  "address": "0xFC5b9AF02e79e350A87e021186881fcEa46F9A26",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionStartDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionEndDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensForSale",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minPrice",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minBuyAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minRaise",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderCancelationPeriodDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumBiddingAmountPerOrder",
          "type": "uint256"
        }
      ],
      "name": "TemplateInitialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "aquaFactory",
      "outputs": [
        {
          "internalType": "contract IAquaFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createSale",
      "outputs": [
        {
          "internalType": "address",
          "name": "newSale",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "encodedInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSaleCreated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metaDataContentHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleLauncher",
      "outputs": [
        {
          "internalType": "contract ISaleLauncher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleTemplateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "templateName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOut",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupplier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensForSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x05681d0554fa9248d168b873d2c43cd78fc46ce54d32b92fbfcac66a29167f2f",
  "receipt": {
    "to": null,
    "from": "0xA601aeD34dda12fF760d8ABb64Fd4Eb3664E35Af",
    "contractAddress": "0xFC5b9AF02e79e350A87e021186881fcEa46F9A26",
    "transactionIndex": 34,
    "gasUsed": "762723",
    "logsBloom": "0x
    "blockHash": "0x5f60c858ade4f58b84d33bd889ca45e28ccfa59379e4a8505455a2509049ab32",
    "transactionHash": "0x05681d0554fa9248d168b873d2c43cd78fc46ce54d32b92fbfcac66a29167f2f",
    "logs": [],
    "blockNumber": 9177771,
    "cumulativeGasUsed": "20626640",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "3c6b894fd2b2fef5ee383711645647e6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionStartDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionEndDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensForSale\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minPrice\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minBuyAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRaise\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderCancelationPeriodDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumBiddingAmountPerOrder\",\"type\":\"uint256\"}],\"name\":\"TemplateInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aquaFactory\",\"outputs\":[{\"internalType\":\"contract IAquaFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newSale\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodedInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSaleCreated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metaDataContentHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleLauncher\",\"outputs\":[{\"internalType\":\"contract ISaleLauncher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTemplateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"templateName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOut\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupplier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(bytes)\":{\"details\":\"setup function expexted to be called by templateLauncher to init the template\",\"params\":{\"_data\":\"encoded template params\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/templates/FairSaleTemplate.sol\":\"FairSaleTemplate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    constructor () internal {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     *\\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\",\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\"},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/shared/interfaces/IAquaFactory.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface IAquaFactory {\\n    function allSales() external view returns (address[] calldata);\\n\\n    function numberOfSales() external view returns (uint256);\\n\\n    function templateManager() external view returns (address);\\n\\n    function templateLauncher() external view returns (address);\\n\\n    function templateFee() external view returns (uint256);\\n\\n    function saleFee() external view returns (uint256);\\n\\n    function feeDenominator() external view returns (uint256);\\n\\n    function feeNumerator() external view returns (uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function addTemplate(address _template) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf588d2009192b85de15083f06b466ae714b50349a7f6ed6e8f15d7b03cfc6f13\",\"license\":\"LGPL-3.0\"},\"contracts/shared/interfaces/ISaleLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ninterface ISaleLauncher {\\n    function factory() external view returns (address);\\n\\n    function createSale(\\n        uint256 _templateId,\\n        address _token,\\n        uint256 _tokenSupply,\\n        address _tokenSupplier,\\n        bytes calldata _data\\n    ) external payable returns (address);\\n\\n    function getDepositAmountWithFees(uint256 _tokenSupply)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x74e138c0890eeaf3dcabda972eeb1b4cb8464d0baf506b26b9837e8fb1139536\",\"license\":\"LGPL-3.0\"},\"contracts/shared/utils/AquaTemplate.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\nimport \\\"@openzeppelin/contracts/introspection/ERC165.sol\\\";\\nimport \\\"./AquaTemplateId.sol\\\";\\n\\nabstract contract AquaTemplate is ERC165, AquaTemplateId {\\n    string public templateName;\\n    string public metaDataContentHash;\\n\\n    function init(bytes calldata data) external virtual;\\n\\n    constructor() public {\\n        _registerInterface(_INTERFACE_ID_TEMPLATE);\\n    }\\n}\\n\",\"keccak256\":\"0x5757a6bd8b5beb2e89cd7d0a98cd2a22c7c11448b78fe5991fc75a0ffb33191e\",\"license\":\"LGPL-3.0\"},\"contracts/shared/utils/AquaTemplateId.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\n\\ncontract AquaTemplateId {\\n    // ITemplate.init.selector ^ ITemplate.templateName.selector\\n    bytes4 internal constant _INTERFACE_ID_TEMPLATE = 0x242c4805;\\n}\\n\",\"keccak256\":\"0xc7beb9be3c7bc59175022710e0677ab4782539c84b415dbd215b33bb7a01501d\",\"license\":\"LGPL-3.0\"},\"contracts/templates/FairSaleTemplate.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity >=0.6.8;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../shared/interfaces/ISaleLauncher.sol\\\";\\nimport \\\"../shared/interfaces/IAquaFactory.sol\\\";\\nimport \\\"../shared/utils/AquaTemplate.sol\\\";\\n\\ncontract FairSaleTemplate is AquaTemplate {\\n    ISaleLauncher public saleLauncher;\\n    IAquaFactory public aquaFactory;\\n    uint256 public saleTemplateId;\\n    address public tokenSupplier;\\n    address public tokenOut;\\n    uint256 public tokensForSale;\\n    bytes public encodedInitData;\\n    bool public isInitialized;\\n    bool public isSaleCreated;\\n\\n    event TemplateInitialized(\\n        address tokenIn,\\n        address tokenOut,\\n        uint256 auctionStartDate,\\n        uint256 auctionEndDate,\\n        uint256 tokensForSale,\\n        uint96 minPrice,\\n        uint96 minBuyAmount,\\n        uint256 minRaise,\\n        uint256 orderCancelationPeriodDuration,\\n        uint256 minimumBiddingAmountPerOrder\\n    );\\n    event SaleCreated();\\n\\n    constructor() public {\\n        templateName = \\\"FairSaleTemplate\\\";\\n        metaDataContentHash = \\\"0x\\\"; // ToDo\\n    }\\n\\n    /// @dev internal setup function to initialize the template, called by init()\\n    /// @param _saleLauncher address of Aqua SaleLauncher\\n    /// @param _saleTemplateId Aqua Auction TemplateId\\n    /// @param _tokenIn token to bid on auction\\n    /// @param _tokenOut token to be auctioned\\n    /// @param _auctionStartDate unix timestamp when the auction starts\\n    /// @param _auctionEndDate unix timestamp when the auction ends\\n    /// @param _tokensForSale amount of tokens to be auctioned\\n    /// @param _minPrice minimum Price that token should be auctioned for\\n    /// @param _minBuyAmount minimum amount of tokens an investor has to buy\\n    /// @param _minRaise minimum amount an project is expected to raise\\n    /// @param _tokenSupplier address that deposits the tokens\\n    function initTemplate(\\n        address _saleLauncher,\\n        uint256 _saleTemplateId,\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _auctionStartDate,\\n        uint256 _auctionEndDate,\\n        uint256 _tokensForSale,\\n        uint96 _minPrice,\\n        uint96 _minBuyAmount,\\n        uint256 _minRaise,\\n        uint256 _orderCancelationPeriodDuration,\\n        uint256 _minimumBiddingAmountPerOrder,\\n        address _tokenSupplier\\n    ) internal {\\n        require(!isInitialized, \\\"FairSaleTemplate: ALEADY_INITIALIZED\\\");\\n\\n        saleLauncher = ISaleLauncher(_saleLauncher);\\n        aquaFactory = IAquaFactory(ISaleLauncher(_saleLauncher).factory());\\n        saleTemplateId = _saleTemplateId;\\n\\n        bool isAtomicClosureAllowed = false;\\n        tokenSupplier = _tokenSupplier;\\n        tokenOut = _tokenOut;\\n        tokensForSale = _tokensForSale;\\n\\n        isInitialized = true;\\n\\n        encodedInitData = abi.encode(\\n            IERC20(_tokenIn),\\n            IERC20(_tokenOut),\\n            _orderCancelationPeriodDuration,\\n            _auctionStartDate,\\n            _auctionEndDate,\\n            uint96(_tokensForSale),\\n            _minBuyAmount,\\n            _minimumBiddingAmountPerOrder,\\n            _minRaise,\\n            isAtomicClosureAllowed,\\n            tokenSupplier\\n        );\\n\\n        emit TemplateInitialized(\\n            _tokenIn,\\n            _tokenOut,\\n            _auctionStartDate,\\n            _auctionEndDate,\\n            _tokensForSale,\\n            _minPrice,\\n            _minBuyAmount,\\n            _minRaise,\\n            _orderCancelationPeriodDuration,\\n            _minimumBiddingAmountPerOrder\\n        );\\n    }\\n\\n    function createSale() public payable returns (address newSale) {\\n        require(!isSaleCreated, \\\"FairSaleTemplate: Sale already created\\\");\\n        require(msg.sender == tokenSupplier, \\\"FairSaleTemplate: FORBIDDEN\\\");\\n        newSale = saleLauncher.createSale{value: msg.value}(\\n            saleTemplateId,\\n            tokenOut,\\n            tokensForSale,\\n            tokenSupplier,\\n            encodedInitData\\n        );\\n        isSaleCreated = true;\\n        emit SaleCreated();\\n    }\\n\\n    /// @dev setup function expexted to be called by templateLauncher to init the template\\n    /// @param _data encoded template params\\n    function init(bytes calldata _data) public override {\\n        (\\n            address _saleLauncher,\\n            uint256 _saleTemplateId,\\n            address _tokenIn,\\n            address _tokenOut,\\n            uint256 _auctionStartDate,\\n            uint256 _auctionEndDate,\\n            uint256 _tokensForSale,\\n            uint96 _minPrice,\\n            uint96 _minBuyAmount,\\n            uint256 _minRaise,\\n            uint256 _orderCancelationPeriodDuration,\\n            uint256 _minimumBiddingAmountPerOrder,\\n            address _tokenSupplier\\n        ) = abi.decode(\\n                _data,\\n                (\\n                    address,\\n                    uint256,\\n                    address,\\n                    address,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    uint96,\\n                    uint96,\\n                    uint256,\\n                    uint256,\\n                    uint256,\\n                    address\\n                )\\n            );\\n\\n        return\\n            initTemplate(\\n                _saleLauncher,\\n                _saleTemplateId,\\n                _tokenIn,\\n                _tokenOut,\\n                _auctionStartDate,\\n                _auctionEndDate,\\n                _tokensForSale,\\n                _minPrice,\\n                _minBuyAmount,\\n                _minRaise,\\n                _orderCancelationPeriodDuration,\\n                _minimumBiddingAmountPerOrder,\\n                _tokenSupplier\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x92cd1ecf5c79b9ab36cc9ae1b9154c84f392c184aa82c13b428fc37e3767c019\",\"license\":\"LGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100216301ffc9a760e01b610096565b61003163242c480560e01b610096565b6040805180820190915260108082526f4661697253616c6554656d706c61746560801b60209092019182526100689160019161011a565b5060408051808201909152600280825261060f60f31b6020909201918252610090918161011a565b506101ad565b6001600160e01b031980821614156100f5576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061015b57805160ff1916838001178555610188565b82800160010185558215610188579182015b8281111561018857825182559160200191906001019061016d565b50610194929150610198565b5090565b5b808211156101945760008155600101610199565b610b1a806101bc6000396000f3fe6080604052600436106100dd5760003560e01c8063613bb30b1161007f57806369f30fd11161005957806369f30fd1146102f4578063906652be14610309578063d0202d3b14610311578063f569720d14610326576100dd565b8063613bb30b146102b557806366b210c2146102ca57806369708c69146102df576100dd565b80632a98bdbd116100bb5780632a98bdbd14610182578063392e53cd1461020c5780634ddf47d4146102215780635aeb431e146102a0576100dd565b806301ffc9a7146100e2578063047f6fe61461012a57806312aef8c31461015b575b600080fd5b3480156100ee57600080fd5b506101166004803603602081101561010557600080fd5b50356001600160e01b03191661033b565b604080519115158252519081900360200190f35b34801561013657600080fd5b5061013f61035a565b604080516001600160a01b039092168252519081900360200190f35b34801561016757600080fd5b50610170610369565b60408051918252519081900360200190f35b34801561018e57600080fd5b5061019761036f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d15781810151838201526020016101b9565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021857600080fd5b506101166103fd565b34801561022d57600080fd5b5061029e6004803603602081101561024457600080fd5b81019060208101813564010000000081111561025f57600080fd5b82018360208201111561027157600080fd5b8035906020019184600183028401116401000000008311171561029357600080fd5b509092509050610406565b005b3480156102ac57600080fd5b506101166104ca565b3480156102c157600080fd5b506101706104d8565b3480156102d657600080fd5b506101976104de565b3480156102eb57600080fd5b5061013f610536565b34801561030057600080fd5b50610197610545565b61013f61059f565b34801561031d57600080fd5b5061013f6107ad565b34801561033257600080fd5b5061013f6107bc565b6001600160e01b03191660009081526020819052604090205460ff1690565b6004546001600160a01b031681565b60085481565b6009805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b600a5460ff1681565b60008060008060008060008060008060008060008e8e6101a081101561042b57600080fd5b506001600160a01b03813581169e5060208201359d50604082013581169c50606082013581169b5060808201359a5060a0820135995060c082013598506001600160601b0360e083013581169850610100830135169650610120820135955061014082013594506101608201359350610180909101351690506104b98d8d8d8d8d8d8d8d8d8d8d8d8d6107cb565b505050505050505050505050505050565b600a54610100900460ff1681565b60055481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b6003546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b600a54600090610100900460ff16156105e95760405162461bcd60e51b8152600401808060200182810382526026815260200180610a9b6026913960400191505060405180910390fd5b6006546001600160a01b03163314610648576040805162461bcd60e51b815260206004820152601b60248201527f4661697253616c6554656d706c6174653a20464f5242494444454e0000000000604482015290519081900360640190fd5b60035460055460075460085460065460405163da550d8960e01b8152600481018581526001600160a01b0394851660248301819052604483018590529285166064830181905260a060848401908152600980546002600019600183161561010002019091160460a48601819052979099169863da550d899834989097959394919391929160c401908490801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b505096505050505050506020604051808303818588803b15801561074257600080fd5b505af1158015610756573d6000803e3d6000fd5b50505050506040513d602081101561076d57600080fd5b5051600a805461ff0019166101001790556040519091507f75ec5602f8c53dccb97de898739afc3eb77713476dd27aa7ea4a4993e322bd8290600090a190565b6007546001600160a01b031681565b6006546001600160a01b031681565b600a5460ff161561080d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610ac16024913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b038f169081179091556040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d602081101561088b57600080fd5b5051600480546001600160a01b039283166001600160a01b03199182161790915560058e9055600680548484169083161790819055600780548e851693168317905560088a9055600a805460ff19166001179055604080518f85166020828101919091528183019490945260608101889052608081018e905260a081018d90526001600160601b03808d1660c08301528a1660e0820152610100810187905261012081018990526000610140820181905292909416610160808601919091528151808603909101815261018090940190528251909261096f92600992910190610a07565b50604080516001600160a01b03808f1682528d1660208201528082018c9052606081018b9052608081018a90526001600160601b03808a1660a0830152881660c082015260e081018790526101008101869052610120810185905290517fb98d540c0d82a4dc2bbe0a4bb2fa830aec832779299f2ffa4db551d7ff1526c4918190036101400190a15050505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a4857805160ff1916838001178555610a75565b82800160010185558215610a75579182015b82811115610a75578251825591602001919060010190610a5a565b50610a81929150610a85565b5090565b5b80821115610a815760008155600101610a8656fe4661697253616c6554656d706c6174653a2053616c6520616c726561647920637265617465644661697253616c6554656d706c6174653a20414c454144595f494e495449414c495a4544a2646970667358221220d067834b230390d457595743f727d9ce7339ad2a90a63886e2aa4da01176f64264736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c8063613bb30b1161007f57806369f30fd11161005957806369f30fd1146102f4578063906652be14610309578063d0202d3b14610311578063f569720d14610326576100dd565b8063613bb30b146102b557806366b210c2146102ca57806369708c69146102df576100dd565b80632a98bdbd116100bb5780632a98bdbd14610182578063392e53cd1461020c5780634ddf47d4146102215780635aeb431e146102a0576100dd565b806301ffc9a7146100e2578063047f6fe61461012a57806312aef8c31461015b575b600080fd5b3480156100ee57600080fd5b506101166004803603602081101561010557600080fd5b50356001600160e01b03191661033b565b604080519115158252519081900360200190f35b34801561013657600080fd5b5061013f61035a565b604080516001600160a01b039092168252519081900360200190f35b34801561016757600080fd5b50610170610369565b60408051918252519081900360200190f35b34801561018e57600080fd5b5061019761036f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d15781810151838201526020016101b9565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021857600080fd5b506101166103fd565b34801561022d57600080fd5b5061029e6004803603602081101561024457600080fd5b81019060208101813564010000000081111561025f57600080fd5b82018360208201111561027157600080fd5b8035906020019184600183028401116401000000008311171561029357600080fd5b509092509050610406565b005b3480156102ac57600080fd5b506101166104ca565b3480156102c157600080fd5b506101706104d8565b3480156102d657600080fd5b506101976104de565b3480156102eb57600080fd5b5061013f610536565b34801561030057600080fd5b50610197610545565b61013f61059f565b34801561031d57600080fd5b5061013f6107ad565b34801561033257600080fd5b5061013f6107bc565b6001600160e01b03191660009081526020819052604090205460ff1690565b6004546001600160a01b031681565b60085481565b6009805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b600a5460ff1681565b60008060008060008060008060008060008060008e8e6101a081101561042b57600080fd5b506001600160a01b03813581169e5060208201359d50604082013581169c50606082013581169b5060808201359a5060a0820135995060c082013598506001600160601b0360e083013581169850610100830135169650610120820135955061014082013594506101608201359350610180909101351690506104b98d8d8d8d8d8d8d8d8d8d8d8d8d6107cb565b505050505050505050505050505050565b600a54610100900460ff1681565b60055481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b6003546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f55780601f106103ca576101008083540402835291602001916103f5565b600a54600090610100900460ff16156105e95760405162461bcd60e51b8152600401808060200182810382526026815260200180610a9b6026913960400191505060405180910390fd5b6006546001600160a01b03163314610648576040805162461bcd60e51b815260206004820152601b60248201527f4661697253616c6554656d706c6174653a20464f5242494444454e0000000000604482015290519081900360640190fd5b60035460055460075460085460065460405163da550d8960e01b8152600481018581526001600160a01b0394851660248301819052604483018590529285166064830181905260a060848401908152600980546002600019600183161561010002019091160460a48601819052979099169863da550d899834989097959394919391929160c401908490801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b505096505050505050506020604051808303818588803b15801561074257600080fd5b505af1158015610756573d6000803e3d6000fd5b50505050506040513d602081101561076d57600080fd5b5051600a805461ff0019166101001790556040519091507f75ec5602f8c53dccb97de898739afc3eb77713476dd27aa7ea4a4993e322bd8290600090a190565b6007546001600160a01b031681565b6006546001600160a01b031681565b600a5460ff161561080d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610ac16024913960400191505060405180910390fd5b600380546001600160a01b0319166001600160a01b038f169081179091556040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d602081101561088b57600080fd5b5051600480546001600160a01b039283166001600160a01b03199182161790915560058e9055600680548484169083161790819055600780548e851693168317905560088a9055600a805460ff19166001179055604080518f85166020828101919091528183019490945260608101889052608081018e905260a081018d90526001600160601b03808d1660c08301528a1660e0820152610100810187905261012081018990526000610140820181905292909416610160808601919091528151808603909101815261018090940190528251909261096f92600992910190610a07565b50604080516001600160a01b03808f1682528d1660208201528082018c9052606081018b9052608081018a90526001600160601b03808a1660a0830152881660c082015260e081018790526101008101869052610120810185905290517fb98d540c0d82a4dc2bbe0a4bb2fa830aec832779299f2ffa4db551d7ff1526c4918190036101400190a15050505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a4857805160ff1916838001178555610a75565b82800160010185558215610a75579182015b82811115610a75578251825591602001919060010190610a5a565b50610a81929150610a85565b5090565b5b80821115610a815760008155600101610a8656fe4661697253616c6554656d706c6174653a2053616c6520616c726561647920637265617465644661697253616c6554656d706c6174653a20414c454144595f494e495449414c495a4544a2646970667358221220d067834b230390d457595743f727d9ce7339ad2a90a63886e2aa4da01176f64264736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "init(bytes)": {
        "details": "setup function expexted to be called by templateLauncher to init the template",
        "params": {
          "_data": "encoded template params"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 6428,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "templateName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 6430,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "metaDataContentHash",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 6479,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "saleLauncher",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ISaleLauncher)5218"
      },
      {
        "astId": 6481,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "aquaFactory",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IAquaFactory)5145"
      },
      {
        "astId": 6483,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "saleTemplateId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 6485,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "tokenSupplier",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 6487,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "tokenOut",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 6489,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "tokensForSale",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 6491,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "encodedInitData",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes_storage"
      },
      {
        "astId": 6493,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "isInitialized",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 6495,
        "contract": "contracts/templates/FairSaleTemplate.sol:FairSaleTemplate",
        "label": "isSaleCreated",
        "offset": 1,
        "slot": "10",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IAquaFactory)5145": {
        "encoding": "inplace",
        "label": "contract IAquaFactory",
        "numberOfBytes": "20"
      },
      "t_contract(ISaleLauncher)5218": {
        "encoding": "inplace",
        "label": "contract ISaleLauncher",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}